{"ast":null,"code":"import _slicedToArray from \"/Users/harukikondo/git/ReactSample3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/harukikondo/git/ReactSample3/src/App.js\",\n    _s = $RefreshSig$(),\n    _this = this;\n\n/**\n * メインコンポーネント\n */\nimport React, { useState } from \"react\";\nimport \"./styles.css\";\n/**\n * カスタムフックを定義する。\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar useCounter = function useCounter(initialCount) {\n  _s();\n\n  // ステート変数\n  var _useState = useState(initialCount),\n      _useState2 = _slicedToArray(_useState, 2),\n      count = _useState2[0],\n      setCount = _useState2[1];\n  /**\n   * カウントアップする関数\n   */\n\n\n  var countAdd = function countAdd() {\n    return setCount(function (prevCount) {\n      return prevCount + 1;\n    });\n  };\n  /**\n   * カウントダウンする関数\n   */\n\n\n  var countDown = function countDown() {\n    return setCount(function (prevCount) {\n      return prevCount - 1;\n    });\n  };\n  /**\n   * カウントリセット\n   */\n\n\n  var countReset = function countReset() {\n    return setCount(initialCount);\n  };\n\n  return {\n    count: count,\n    countAdd: countAdd,\n    countDown: countDown,\n    countReset: countReset\n  };\n};\n/**\n * CountTextコンポーネント\n */\n\n\n_s(useCounter, \"f/kqQ+OQL81QKLn+bkMmF1gI7rc=\");\n\nvar CounterText = function CounterText(_ref) {\n  var count = _ref.count;\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"\\u73FE\\u5728\\u306E\\u30AB\\u30A6\\u30F3\\u30C8\\u6570\\uFF1A\", count]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 34\n  }, _this);\n};\n\n_c = CounterText;\nexport default function App() {\n  return;\n}\n_c2 = App;\n;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CounterText\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/harukikondo/git/ReactSample3/src/App.js"],"names":["React","useState","useCounter","initialCount","count","setCount","countAdd","prevCount","countDown","countReset","CounterText","App"],"mappings":";;;;;;AAAA;AACA;AACA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,cAAP;AAEA;AACA;AACA;;;;AACA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,YAAD,EAAkB;AAAA;;AACnC;AACA,kBAA4BF,QAAQ,CAACE,YAAD,CAApC;AAAA;AAAA,MAAQC,KAAR;AAAA,MAAeC,QAAf;AAEA;AACF;AACA;;;AACE,MAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,WAAMD,QAAQ,CAAC,UAACE,SAAD;AAAA,aAAeA,SAAS,GAAG,CAA3B;AAAA,KAAD,CAAd;AAAA,GAAjB;AAEA;AACF;AACA;;;AACE,MAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,WAAMH,QAAQ,CAAC,UAACE,SAAD;AAAA,aAAeA,SAAS,GAAG,CAA3B;AAAA,KAAD,CAAd;AAAA,GAAlB;AAEA;AACF;AACA;;;AACE,MAAME,UAAU,GAAG,SAAbA,UAAa;AAAA,WAAMJ,QAAQ,CAACF,YAAD,CAAd;AAAA,GAAnB;;AAEA,SAAO;AAAEC,IAAAA,KAAK,EAALA,KAAF;AAASE,IAAAA,QAAQ,EAARA,QAAT;AAAmBE,IAAAA,SAAS,EAATA,SAAnB;AAA8BC,IAAAA,UAAU,EAAVA;AAA9B,GAAP;AACD,CApBD;AAsBA;AACA;AACA;;;GAxBMP,U;;AAyBN,IAAMQ,WAAW,GAAG,SAAdA,WAAc;AAAA,MAAEN,KAAF,QAAEA,KAAF;AAAA,sBAAa;AAAA,yEAAaA,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA,WAAb;AAAA,CAApB;;KAAMM,W;AAEN,eAAe,SAASC,GAAT,GAAe;AAC5B;AACD;MAFuBA,G;AAEvB","sourcesContent":["/**\n * メインコンポーネント\n */\nimport React, { useState } from \"react\";\nimport \"./styles.css\";\n\n/**\n * カスタムフックを定義する。\n */\nconst useCounter = (initialCount) => {\n  // ステート変数\n  const [ count, setCount ] = useState(initialCount);\n  \n  /**\n   * カウントアップする関数\n   */\n  const countAdd = () => setCount((prevCount) => prevCount + 1);\n\n  /**\n   * カウントダウンする関数\n   */\n  const countDown = () => setCount((prevCount) => prevCount - 1);\n\n  /**\n   * カウントリセット\n   */\n  const countReset = () => setCount(initialCount);\n\n  return { count, countAdd, countDown, countReset };\n};\n\n/**\n * CountTextコンポーネント\n */\nconst CounterText = ({count}) => <p>現在のカウント数：{count}</p>;\n\nexport default function App() {\n  return \n};\n "]},"metadata":{},"sourceType":"module"}