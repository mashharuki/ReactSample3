{"ast":null,"code":"import _slicedToArray from \"/Users/harukikondo/git/ReactSample3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\n/**\n * メインコンポーネント\n */\nimport React, { useState } from \"react\";\nimport \"./styles.css\";\n/**\n * カスタムフックを定義する。\n */\n\nvar useCounter = function useCounter(initialCount) {\n  _s();\n\n  // ステート変数\n  var _useState = useState(initialCount),\n      _useState2 = _slicedToArray(_useState, 2),\n      count = _useState2[0],\n      setCount = _useState2[1];\n  /**\n   * カウントアップする関数\n   */\n\n\n  var countAdd = function countAdd() {\n    return setCount(function (prevCount) {\n      return prevCount + 1;\n    });\n  };\n  /**\n   * カウントダウンする関数\n   */\n\n\n  var countDown = function countDown() {\n    return setCount();\n  };\n};\n\n_s(useCounter, \"f/kqQ+OQL81QKLn+bkMmF1gI7rc=\");\n\nexport default function App() {\n  return;\n}\n_c = App;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/harukikondo/git/ReactSample3/src/App.js"],"names":["React","useState","useCounter","initialCount","count","setCount","countAdd","prevCount","countDown","App"],"mappings":";;;;AAAA;AACA;AACA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,cAAP;AAEA;AACA;AACA;;AACA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,YAAD,EAAkB;AAAA;;AACnC;AACA,kBAA4BF,QAAQ,CAACE,YAAD,CAApC;AAAA;AAAA,MAAQC,KAAR;AAAA,MAAeC,QAAf;AAEA;AACF;AACA;;;AACE,MAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,WAAMD,QAAQ,CAAC,UAACE,SAAD;AAAA,aAAeA,SAAS,GAAG,CAA3B;AAAA,KAAD,CAAd;AAAA,GAAjB;AAEA;AACF;AACA;;;AACE,MAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,WAAMH,QAAQ,EAAd;AAAA,GAAlB;AACD,CAbD;;GAAMH,U;;AAeN,eAAe,SAASO,GAAT,GAAe;AAC5B;AACD;KAFuBA,G;AAEvB","sourcesContent":["/**\n * メインコンポーネント\n */\nimport React, { useState } from \"react\";\nimport \"./styles.css\";\n\n/**\n * カスタムフックを定義する。\n */\nconst useCounter = (initialCount) => {\n  // ステート変数\n  const [ count, setCount ] = useState(initialCount);\n  \n  /**\n   * カウントアップする関数\n   */\n  const countAdd = () => setCount((prevCount) => prevCount + 1);\n\n  /**\n   * カウントダウンする関数\n   */\n  const countDown = () => setCount();\n};\n\nexport default function App() {\n  return \n};\n "]},"metadata":{},"sourceType":"module"}